/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/admin.js":
/*!*******************************!*\
  !*** ./resources/js/admin.js ***!
  \*******************************/
/***/ (() => {

eval("$(function () {\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  }); // this is the id of the form\n\n  $(\"form.ajax-and-picture\").submit(function (e) {\n    Toast.fire({\n      icon: 'info',\n      title: 'Modification...'\n    });\n    e.preventDefault(); // avoid to execute the actual submit of the form.\n\n    var myForm = $(this)[0];\n    var url = $(this).attr('action');\n    $.ajax({\n      type: \"POST\",\n      url: url,\n      data: new FormData(myForm),\n      processData: false,\n      contentType: false,\n      success: function success(data) {\n        Toast.fire({\n          icon: 'success',\n          title: 'Modification effectu√©e'\n        });\n      },\n      error: function error(data) {\n        console.log('erreur ajax :');\n        console.log(data);\n      }\n    });\n  }); // Mettre l'input en D-none juste √† c√¥t√©, dans un form\n\n  $('.change-pic').on('click', function () {\n    var imgselected = $(this).find('img');\n    var inputfile = $(this).siblings('input[type=\"file\"]');\n    inputfile.trigger('click'); // Fait direct le rendu \n\n    inputfile.on('change', function (evt) {\n      var tgt = evt.target || window.event.srcElement,\n          files = tgt.files;\n\n      if (FileReader && files && files.length) {\n        var fr = new FileReader();\n\n        fr.onload = function () {\n          imgselected.get(0).src = fr.result;\n        };\n\n        fr.readAsDataURL(files[0]);\n      }\n    });\n  });\n  var Toast = swal.mixin({\n    toast: true,\n    position: 'top',\n    showConfirmButton: false,\n    timer: 2000,\n    didOpen: function didOpen(toast) {\n      toast.addEventListener('mouseenter', swal.stopTimer);\n      toast.addEventListener('mouseleave', swal.resumeTimer);\n    }\n  }); // this is the id of the form\n\n  $(\"form.ajax\").submit(function (e) {\n    Toast.fire({\n      icon: 'info',\n      title: 'Modification...'\n    });\n    e.preventDefault(); // avoid to execute the actual submit of the form.\n\n    var form = $(this);\n    var url = form.attr('action');\n    $.ajax({\n      type: \"POST\",\n      url: url,\n      data: form.serialize(),\n      // serializes the form's elements.\n      success: function success(data) {\n        Toast.fire({\n          icon: 'success',\n          title: data\n        });\n      },\n      error: function error() {\n        Toast.fire({\n          icon: 'error',\n          title: 'A√Øe üòì √ßa n\\'a pas march√©...'\n        });\n      }\n    });\n  });\n  $('.btn-danger').on('click', function () {\n    var id = $(this).data('id');\n    var slug = $(this).data('slug');\n    swal.fire({\n      title: '√ätes-vous s√ªr ?',\n      text: \"Vous allez d√©finitivement le supprimer!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, supprimer!',\n      cancelButtonText: 'Annuler'\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        $.ajax({\n          type: \"DELETE\",\n          url: \"/delete/\".concat(slug, \"/\").concat(id),\n          success: function success() {\n            window.location.reload();\n          },\n          error: function error() {\n            Toast.fire({\n              icon: 'error',\n              title: 'A√Øe üòì √ßa n\\'a pas march√©...'\n            });\n          }\n        });\n      }\n    });\n  }), $('[data-toggle=\"tooltip\"]').tooltip();\n  $('.colorpicker').colorpicker();\n  $('.colorpicker').on('colorpickerChange', function (event) {\n    $(this).closest('.tec').find('.banner').css('background-color', event.color.toString());\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/admin.js"]();
/******/ 	
/******/ })()
;